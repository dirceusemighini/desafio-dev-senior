// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package generated


case class FindPOI(name: Option[String] = None,
                   city: generated.City,
                   resultRange: generated.ResultRange,
                   token: Option[String] = None)


case class ResultRange(pageIndex: Int,
                       recordsPerPage: Int)


case class FindPOIResponse(findPOIResult: generated.POIInfo)


case class POIInfo(recordCount: Int,
                   pageCount: Int,
                   poiLocations: Option[generated.ArrayOfPOILocation] = None)


case class ArrayOfPOILocation(POILocation: generated.POILocation*)


case class POILocation(name: Option[String] = None,
                       district: Option[String] = None,
                       carAccess: Boolean,
                       dataSource: Option[String] = None,
                       city: generated.City,
                       point: generated.Point)


case class FindAddress(address: generated.Address,
                       ao: generated.AddressOptions,
                       token: Option[String] = None)


case class Address(street: Option[String] = None,
                   houseNumber: Option[String] = None,
                   zip: Option[String] = None,
                   district: Option[String] = None,
                   city: generated.City)


case class AddressOptions(matchType: Int,
                          usePhonetic: Boolean,
                          searchType: Int,
                          resultRange: generated.ResultRange)


case class FindAddressResponse(findAddressResult: generated.AddressInfo)


case class AddressInfo(recordCount: Int,
                       pageCount: Int,
                       addressLocation: Option[generated.ArrayOfAddressLocation] = None)


case class ArrayOfAddressLocation(AddressLocation: generated.AddressLocation*)


case class AddressLocation(key: Option[String] = None,
                           address: generated.Address,
                           zipL: Option[String] = None,
                           zipR: Option[String] = None,
                           carAccess: Boolean,
                           dataSource: Option[String] = None,
                           point: generated.Point)


case class GetAddress(point: generated.Point,
                      token: Option[String] = None,
                      tolerance: Double)


case class GetAddressResponse(getAddressResult: generated.AddressLocation)


case class GetXY(address: generated.Address,
                 token: Option[String] = None)


case class GetXYResponse(getXYResult: generated.Point)


case class GetXYRadiusWithMap(address: generated.Address,
                              mo: generated.MapOptions,
                              radius: Int,
                              token: Option[String] = None)


case class GetXYRadiusWithMapResponse(getXYRadiusWithMapResult: generated.MapInfo)


case class FindCity(cidade: generated.City,
                    ao: generated.AddressOptions,
                    token: Option[String] = None)


case class FindCityResponse(findCityResult: generated.CityLocationInfo)


case class CityLocationInfo(recordCount: Int,
                            pageCount: Int,
                            cityLocation: Option[generated.ArrayOfCityLocation] = None)


case class ArrayOfCityLocation(CityLocation: generated.CityLocation*)


case class CityLocation(city: generated.City,
                        point: generated.Point,
                        carAccess: Boolean,
                        zipRangeStart: Option[String] = None,
                        zipRangeEnd: Option[String] = None,
                        capital: Boolean)


case class GetCrossStreetXY(cidade: generated.City,
                            firstStreet: Option[String] = None,
                            secondStreet: Option[String] = None,
                            token: Option[String] = None)


case class GetCrossStreetXYResponse(GetCrossStreetXYResult: Option[generated.ArrayOfCrossStreetLocation] = None)


case class ArrayOfCrossStreetLocation(CrossStreetLocation: Option[generated.CrossStreetLocation]*)


case class CrossStreetLocation(city: generated.City,
                               point: generated.Point,
                               crossStreet: Option[String] = None,
                               district: Option[String] = None,
                               street: Option[String] = None,
                               zip: Option[String] = None)


case class GetCrossStreetAddress(point: generated.Point,
                                 token: Option[String] = None)


case class GetCrossStreetAddressResponse(GetCrossStreetAddressResult: Option[generated.ArrayOfAddressLocation] = None)

